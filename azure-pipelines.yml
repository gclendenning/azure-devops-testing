# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - main
  tags:
    include:
    - '*'

pr:
  branches:
    include:
    - main
    exclude:
    - doc/*
    - README.rst

parameters:
  - name: includeReleaseCandidates
    displayName: "Allow pre-release dependencies"
    type: boolean
    default: false

variables:
  triggeredByPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]
  # includeReleaseCandidates: $[eq(variables['INCLUDE_RELEASE_CANDIDATES'], 'true')]

stages:
  - stage: RunAllTests
    displayName: Run test suite
    jobs:
      - job: run_platform_tests
        strategy:
          matrix:
            mac_py39:
              imageName: 'macOS-latest'
              python.version: '3.9'
            linux_py39:
              imageName: 'ubuntu-latest'
              python.version: '3.9'
            windows_py39:
              imageName: 'windows-latest'
              python.version: '3.9'
            mac_py310:
              imageName: 'macOS-latest'
              python.version: '3.10'
            linux_py310:
              imageName: 'ubuntu-latest'
              python.version: '3.10'
            windows_py310:
              imageName: 'windows-latest'
              python.version: '3.10'
            mac_py311:
              imageName: 'macOS-latest'
              python.version: '3.11'
            linux_py311:
              imageName: 'ubuntu-latest'
              python.version: '3.11'
            windows_py311:
              imageName: 'windows-latest'
              python.version: '3.11'
            mac_py312:
              imageName: 'macOS-latest'
              python.version: '3.12'
            linux_py312:
              imageName: 'ubuntu-latest'
              python.version: '3.12'
            windows_py312:
              imageName: 'windows-latest'
              python.version: '3.12'
            mac_py313:
              imageName: 'macOS-latest'
              python.version: '3.13'
            linux_py313:
              imageName: 'ubuntu-latest'
              python.version: '3.13'
            windows_py313:
              imageName: 'windows-latest'
              python.version: '3.13'
        pool:
          vmImage: $(imageName)

        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - script: |
            python -m pip install --upgrade pip
          displayName: 'Install dependencies'

        - bash: |
            echo "Not in python 3.13"
            echo "$(python.version)"
          displayName: 'Test non python 3.13'
          condition: ne(variables.python.version, '3.13')

        - bash: |
            echo "In python 3.13"
            echo "$(python.version)"
          displayName: 'Test python 3.13'
          condition: eq(variables.python.version, '3.13')

        # - bash: |
        #     pip install -e .
        #   displayName: 'Install package'
        #   condition: ${{ eq(parameters.includeReleaseCandidates, false) }}

        # - bash: |
        #     pip install --pre -e .
        #   displayName: 'Install package (allow pre-release dependencies)'
        #   condition: ${{ eq(parameters.includeReleaseCandidates, true) }}

        # - script: |
        #     # pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple hdbscan
        #     pip install hdbscan
        #     pip freeze
        #   displayName: 'Install package'

        # - script: |
        #     python test_hdbscan.py
        #   displayName: 'Run tests'





